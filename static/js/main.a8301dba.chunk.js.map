{"version":3,"sources":["Header.js","SearchArea.js","BookCard.js","BookList.js","Books.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","SearchArea","props","onSubmit","searchBook","onChange","handleSearch","placeholder","type","value","sort","handleSort","disabled","BookCard","src","image","alt","title","author","published","substring","href","infoLink","target","rel","BookList","books","map","book","i","src_BookCard","key","volumeInfo","imageLinks","thumbnail","authors","publishedDate","Books","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","request","get","query","q","state","searchField","then","data","cleanData","setState","body","items","hasOwnProperty","_this2","sortedBooks","b","parseInt","src_SearchArea","src_BookList","Component","App","src_Header","src_Books","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8301dba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <i className=\"fas fa-book fa-2x\"></i>\r\n            <h1>Google Books Search</h1>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchArea = (props) => {\r\n    return (\r\n        <div className=\"search-area\">\r\n            <form onSubmit={props.searchBook}>\r\n                <input onChange={props.handleSearch} placeholder=\"Search books\" type=\"text\"/>\r\n            <button type=\"submit\">Search</button>\r\n                <select value={props.sort} onChange={props.handleSort}>\r\n                <option disabled value='Sort'>Sort</option>\r\n                <option value='Newest'>Newest</option>\r\n                <option value='Oldest'>Oldest</option>\r\n            </select>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchArea;","import React from 'react';\r\n\r\nconst BookCard = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={props.image} alt=\"\" />\r\n            <div className=\"desc\">\r\n                <h2>{props.title}</h2>\r\n                <h3>Author: {props.author}</h3>\r\n                <p>Published Date: {props.published === '0000' ? 'Not Available' : props.published.substring(0, 4)}</p>\r\n\r\n                <a href={props.infoLink} target='_blank' rel=\"noopener noreferrer\" className=\"button\">Learn More</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard;","import React from 'react';\r\nimport BookCard from './BookCard'\r\n\r\nconst BookList = (props) => {\r\n    return (\r\n        <div className=\"List\">\r\n            {\r\n                props.books.map((book, i) => {\r\n                    return <BookCard \r\n                        key={i}\r\n                        image={book.volumeInfo.imageLinks.thumbnail}\r\n                        title={book.volumeInfo.title}\r\n                        author={book.volumeInfo.authors}\r\n                        published={book.volumeInfo.publishedDate}\r\n                        infoLink={book.volumeInfo.infoLink}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport SearchArea from './SearchArea';\r\nimport request from 'superagent';\r\nimport BookList from './BookList';\r\n\r\nclass Books extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            searchField: '',\r\n            sort: ''\r\n        }\r\n    }\r\n\r\n    searchBook = (e) => {\r\n        e.preventDefault();\r\n        request\r\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\r\n            .query({ q: this.state.searchField })\r\n            .then((data) => {\r\n                const cleanData = this.cleanData(data)\r\n                this.setState({ books: cleanData })\r\n        })\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        this.setState({ searchField: e.target.value })\r\n    }\r\n\r\n    handleSort = (e) => {\r\n        this.setState ({ sort: e.target.value })\r\n    }\r\n\r\n    cleanData = (data) => {\r\n        const cleanedData = data.body.items.map((book) => {\r\n            if(book.volumeInfo.hasOwnProperty('publishedDate') === false ) {\r\n                book.volumeInfo['publishedDate'] = '0000';\r\n            }\r\n\r\n            else if (book.volumeInfo.hasOwnProperty('imageLinks') === false) {\r\n                book.volumeInfo['imageLinks'] = { thumbnail: 'http://maestroselectronics.com/wp-content/uploads/2017/12/No_Image_Available.jpg'}\r\n            }\r\n\r\n            return book;\r\n        })\r\n\r\n        return cleanedData;\r\n    }\r\n\r\n    render() {\r\n        const sortedBooks = this.state.books.sort((a, b) => {\r\n            if (this.state.sort === 'Newest') {\r\n                return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\r\n            }\r\n            else if (this.state.sort === 'Oldest') {\r\n                return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\r\n            }\r\n\r\n            return sortedBooks;\r\n        })\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <SearchArea \r\n                    searchBook={this.searchBook}\r\n                    handleSearch={this.handleSearch} handleSort={this.handleSort}/>\r\n                <BookList books={sortedBooks}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Books;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Books from './Books';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Header />\n       <Books />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}